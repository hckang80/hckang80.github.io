{"meta":{"title":"HTML, CSS, Javascript, ETC","subtitle":null,"description":null,"author":"Kang Heechang","url":"https://hckang80.github.io"},"pages":[],"posts":[{"title":"바람직한 CSS 작성 방법(지극히 주관적)","slug":"바람직한-CSS-작성-방법","date":"2018-01-25T06:05:26.000Z","updated":"2018-01-29T07:01:19.426Z","comments":true,"path":"2018/01/25/바람직한-CSS-작성-방법/","link":"","permalink":"https://hckang80.github.io/2018/01/25/바람직한-CSS-작성-방법/","excerpt":"","text":"참고 : 글쓴이의 주관적인 생각에 의해 작성된 것이므로 자신이 사용하는 방법과 맞지 않을 수도 있습니다. 글 특성상 경어는 생략하도록 하겠습니다. 요즘은 Sass, Less 등 전처리기의 도움으로 자칫 복잡해 질 수 있는 css 코드도 효과적인 관리가 가능하지만 바람직한 css를 작성하는 기본은 잊지 않아야 한다.그럼 글쓴이의 경험에 의한 바람직한 css 작성 방법에 대해 알아보겠다. 1. 내용이 반복되지 않도록 한다.아래는 국기 아이콘 부분을 IR(Image Replacement) 기법을 이용하여 작성한 코드이다. 123456&lt;ul class=\"lang-list\"&gt; &lt;li&gt;&lt;a href=\"#\" class=\"ico-kr\"&gt;국문&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\" class=\"ico-en\"&gt;English&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\" class=\"ico-ja\"&gt;日本語&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\" class=\"ico-zh\"&gt;中國&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 1234567891011121314151617181920212223242526272829/* 내용이 중복된 코드 */.ico-kr&#123; display: inline-block; width: 30px; height: 20px; text-indent: -9999px; background: url(‘../images/ico-flag.png’) no-repeat;&#125;.ico-en&#123; display: inline-block; width: 30px; height: 20px; text-indent: -9999px; background: url(‘../images/ico-flag.png’) no-repeat 0 -20px;&#125;.ico-ja&#123; display: inline-block; width: 30px; height: 20px; text-indent: -9999px; background: url(‘../images/ico-flag.png’) no-repeat 0 -40px;&#125;.ico-zh&#123; display: inline-block; width: 30px; height: 20px; text-indent: -9999px; background: url(‘../images/ico-flag.png’) no-repeat 0 -60px;&#125; 위와 같은 경우, 배경이미지 등 여러 내용이 동일함에도 불구하고 반복되어 사용되고 있다.공통으로 선택하여 반복되는 내용은 한 번에 작성하고 값이 다른 배경이미지 위치만 각기 넣는 형태가 바람직하다. 123456789101112131415161718192021/* 개선된 코드 */.lang-list a&#123; display: inline-block; width: 30px; height: 20px; text-indent: -9999px; background-image: url(‘../images/ico-flag.png’); background-repeat: no-repeat;&#125;.ico-kr&#123; background-position: 0 0; /* 배경위치가 기본 값이므로 생략 가능하나 코드의 일관성을 위해 넣어봤다. */&#125;.ico-en&#123; background-position: -20px 0;&#125;.ico-ja&#123; background-position: -40px 0;&#125;.ico-zh&#123; background-position: -60px 0;&#125; 2. 선택자를 너무 간결하거나 복잡하게 사용하지 않는다.1234/* 안좋은 예 */.box&#123; border:1px solid #ddd; &#125;.title&#123; font-size:1.2rem; &#125;.content .wrap .list .desc-area .item&#123; color:#f00; &#125; 선택자가 간결할 경우, 웹 사이트가 확장 됨에 따라 중첩된 선택이 일어나 의도하지 않은 변형이 일어날 확률이 현저히 많아진다. 반대로 너무 길어지게 되면 가독성이 안좋아지고, 코드의 일관성을 맞추기도 어려워진다.각 요소의 첫 번째 선택자를 두 단어 이상 조합된 형태로 작성만 하여도 이러한 문제를 충분히 피할 수 있다. 1234/* 개선된 코드 */.news-wrap .box&#123; border:1px solid #ddd; &#125;.sub-title&#123; font-size:1.2rem; &#125;.desc-area .item&#123; color:#f00; &#125;","categories":[{"name":"CSS","slug":"CSS","permalink":"https://hckang80.github.io/categories/CSS/"}],"tags":[{"name":"CSS, Desirable, Simple, 바람직한, 간결한","slug":"CSS-Desirable-Simple-바람직한-간결한","permalink":"https://hckang80.github.io/tags/CSS-Desirable-Simple-바람직한-간결한/"}]},{"title":"알고리즘 문제 풀이 - 계단 그리기","slug":"계단-그리기","date":"2018-01-24T08:02:54.000Z","updated":"2018-02-01T01:07:43.627Z","comments":true,"path":"2018/01/24/계단-그리기/","link":"","permalink":"https://hckang80.github.io/2018/01/24/계단-그리기/","excerpt":"","text":"변수 n에 해당하는 줄수의 계단 형태를 만들어보자. 실행문123456789101112131415var n = 6;var i, j;var build = '';for (i = 1; i &lt;= n; i++) &#123; // 6층 계단을 만들기 위한 기초 공사 var blank = ''; var floor = ''; for (j = 0; j &lt; n - i; j++) &#123; blank += ' '; // 5 4 3 2 1 0 갯수 만큼 '여백'을 반복 &#125; for (j = 0; j &lt; i; j++) &#123; floor += '#'; // 1 2 3 4 5 6 갯수 만큼 '#'을 반복 &#125; build += blank + floor + '\\n';&#125;console.log(build); 출력값123456 # ## ### #### ###########","categories":[{"name":"javascript","slug":"javascript","permalink":"https://hckang80.github.io/categories/javascript/"}],"tags":[{"name":"for, algorithms, 반복문, 알고리즘","slug":"for-algorithms-반복문-알고리즘","permalink":"https://hckang80.github.io/tags/for-algorithms-반복문-알고리즘/"}]},{"title":"알고리즘 문제 풀이 - 두 점수를 비교하다","slug":"배열-응용-두-점수를-비교하다","date":"2018-01-22T08:30:27.000Z","updated":"2018-01-31T02:21:49.537Z","comments":true,"path":"2018/01/22/배열-응용-두-점수를-비교하다/","link":"","permalink":"https://hckang80.github.io/2018/01/22/배열-응용-두-점수를-비교하다/","excerpt":"","text":"‘a양’과 ‘b군’의 점수를 비교한 후 점수가 높은 쪽에게 승점을 주어 배열로 출력해보자. 1234567891011var a = [5, 7, 15]; // 'a양'의 점수var b = [10, 7, 11]; // 'b군'의 점수var point = [0, 0]; // 'a양'과 'b군'이 획득하게 될 승점을 배열로 선언for(var i in a)&#123; if(a[i] &gt; b[i])&#123; // 'a양'의 점수가 높다면 point[0]++; // 배열로 선언한 'a양'의 승점이 증가 &#125;else if(a[i] &lt; b[i])&#123; // 'b군'의 점수가 높다면 point[1]++; // 배열로 선언한 'b군'의 승점이 증가 &#125;&#125;return point;","categories":[{"name":"javascript","slug":"javascript","permalink":"https://hckang80.github.io/categories/javascript/"}],"tags":[{"name":"array, algorithms, 배열, 알고리즘","slug":"array-algorithms-배열-알고리즘","permalink":"https://hckang80.github.io/tags/array-algorithms-배열-알고리즘/"}]},{"title":"알고리즘 문제 풀이 - 배열의 합을 구해보자","slug":"배열의-합을-구해보자","date":"2018-01-18T00:50:22.000Z","updated":"2018-01-31T02:21:43.396Z","comments":true,"path":"2018/01/18/배열의-합을-구해보자/","link":"","permalink":"https://hckang80.github.io/2018/01/18/배열의-합을-구해보자/","excerpt":"","text":"123456var ar = [1, 2, 3, 4, 10, 11];var sum = 0;for(var i in ar)&#123; sub += ar[i]; // i는 배열의 인덱스를 순차적으로 출력하므로 sum은 배열의 값을 더해나감&#125;return sum;","categories":[{"name":"javascript","slug":"javascript","permalink":"https://hckang80.github.io/categories/javascript/"}],"tags":[{"name":"array, algorithms, 배열, 알고리즘","slug":"array-algorithms-배열-알고리즘","permalink":"https://hckang80.github.io/tags/array-algorithms-배열-알고리즘/"}]},{"title":"2018년 Front-end 개발 로드맵","slug":"dev","date":"2018-01-15T03:53:19.000Z","updated":"2018-01-16T00:54:05.526Z","comments":true,"path":"2018/01/15/dev/","link":"","permalink":"https://hckang80.github.io/2018/01/15/dev/","excerpt":"","text":"","categories":[{"name":"etc","slug":"etc","permalink":"https://hckang80.github.io/categories/etc/"}],"tags":[{"name":"development","slug":"development","permalink":"https://hckang80.github.io/tags/development/"}]}]}